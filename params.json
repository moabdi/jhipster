{
  "name": "Jhipster",
  "tagline": "présentation jhipster",
  "body": "<!doctype html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <title>JHipster</title>\r\n        <meta name=\"description\" content=\"Hipster stack for Java developers. Yeoman + Spring + AngularJS in one handy generator.\">\r\n        <meta name=\"author\" content=\"Julien Dubois\">\r\n        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\r\n        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\r\n        <link href='http://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' type='text/css'>\r\n        <link rel=\"stylesheet\" href=\"css/reveal.min.css\">\r\n        <link rel=\"stylesheet\" href=\"css/theme/default.css\" id=\"theme\">\r\n\r\n        <!-- For syntax highlighting -->\r\n        <link rel=\"stylesheet\" href=\"lib/css/zenburn.css\">\r\n        <link rel=\"icon\" type=\"image/png\" href=\"/images/favicon-32x32.png\" sizes=\"32x32\">\r\n        <!-- If the query includes 'print-pdf', use the PDF print sheet -->\r\n        <script>\r\n            document.write( '<link rel=\"stylesheet\" href=\"css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css\" type=\"text/css\" media=\"print\">' );\r\n        </script>\r\n\r\n        <!--[if lt IE 9]>\r\n        <script src=\"lib/js/html5shiv.js\"></script>\r\n        <![endif]-->\r\n    </head>\r\n\r\n    <body>\r\n        <div class=\"reveal\">\r\n            <!-- Any section element inside of this container is displayed as a slide -->\r\n            <div class=\"slides\">\r\n                <section data-markdown>\r\n                    # Java Hipster \r\n\r\n                    ![](images/logo-jhipster-drink-coffee.png)\r\n\r\n                    ## Développement web moderne\r\n\r\n                    [Animé par: Mostapha ABDI / @mostaphabdi](http://twitter.com/mostaphabdi)\r\n                </section>\r\n\r\n                <section  data-background=\"#e7e7e7\" data-background-transition=\"zoom\" data-markdown\r\n                data-menu-title=\"Custom Menu Title\">\r\n                    # Objectifs\r\n                    ###### -\r\n                    ##### 1. C'est quoi JHipster ?\r\n                    ##### 2. Pourquoi JHipster ?\r\n                    ##### 3. Comment ça marche? \r\n                </section>\r\n\r\n                <section>\r\n                    <section data-background=\"#e7e7e7\" data-background-transition=\"zoom\" data-markdown>\r\n                        # Développement web moderne\r\n                    </section>\r\n                    <section data-background-transition=\"zoom\" data-markdown>\r\n                        ## Les applications web modernes\r\n                        ###### -\r\n                        Les exigences des utilisateurs finaux ont été évolués. Les gens sont fatigués de sites lents et non réactifs.                         Ils veulent: \r\n\r\n                        * Avoir une belle conception\r\n                        * Cesser d'attendre le chargement des pages\r\n                        * Avoir des mises à jour dynamiques de fragments de page\r\n\r\n                        ---\r\n                        ### _Besoin d'utiliser les dernières technologies  HTML5/CSS3/JavaScript_\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## La productivité de développeur\r\n                        ###### -\r\n                        \r\n                        * Ces sites doivent être livrés _rapidement_.\r\n                        \r\n                        * Attendre 1 minute pour « déployer » votre application n’est plus acceptable\r\n                        \r\n                        ---\r\n                        ### _Besoin de bons outils pour ce travail!_\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Logiciel de prête-production\r\n                        ###### -\r\n                        * Les sites web modernes devraient être en mesure de gérer un très grand nombre d'utilisateurs simultanés\r\n                        \r\n                        * Utilisant toutes les applications RESTful massives, qui frapperont fort vos serveurs back-end\r\n\r\n                        ---\r\n                        ### _besoin de serveurs robustes, évolutifs, et de haute performance_\r\n                    </section>\r\n                </section>\r\n                <section>\r\n                    <section data-background=\"#e7e7e7\" data-background-transition=\"zoom\" data-markdown>\r\n                            # JHipster\r\n                            ###### -\r\n                            ![](images/Jhipster.png)\r\n                        \r\n                            <a href=\"http://jhipster.github.io\">http://jhipster.github.io</a>\r\n                    </section>\r\n                    <section data-markdown>\r\n                            ## Cocktail   technologies \r\n                            ###### -\r\n                            ![](images/cock.png)\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## JHipster\r\n                        ###### -\r\n                        * JHipster rend tout travail ensemble\r\n                        * JHipster crée une application de travail complete, avec toutes ces technologies\r\n                        * Tout fonctionne out-of-the-box\r\n                        * Flux de travail Gulp fonctionne très bien avec Maven!\r\n                        * Configuration Docker pour exécuter tout en douceur!\r\n\r\n                    </section>\r\n                </section>\r\n                <section>\r\n                    <section data-background=\"#e7e7e7\"  data-background-transition=\"zoom\" data-markdown>\r\n                        # Front-End\r\n                        ###### -\r\n                        ### Yeoman, Gulp, Bower, AngularJS, Bootstrap\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Yeoman\r\n                        ###### -\r\n                        ### Yeoman fournit des _générateurs_  d'applications\r\n\r\n                        \r\n                        * Des centaines de générateurs sont disponibles\r\n                        * Principalement orientée vers les applications JavaScript front-end\r\n                        * Les générateurs meilleurs sont d'excellente qualité\r\n\r\n                        ```\r\n                        <code data-trim contenteditable>yo jhipster</code>\r\n                        ```\r\n                        \r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Gulp | Grunt\r\n                        ###### -\r\n                        ### Tâche runner de JavaScript\r\n                        \r\n                        * Pour le développement, il vous permettra d'avoir « le montage en direct »de votre code, d’exécuter vos tests en arrière-plan ...\r\n                        * Pour la production, il va compresser et optimiser toutes vos ressources, compiler votre code Sass ...\r\n\r\n                        ```\r\n                            <code data-trim contenteditable> > gulp test</code>\r\n                        ```\r\n                        ```\r\n                            <code data-trim contenteditable> > grunt test</code>\r\n                        ``` \r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Bower\r\n                        ###### -\r\n                        ### Gestionnaire de paquets JavaScript\r\n                        \r\n                        * Vous pouvez rechercher, installer et mettre à jour vos bibliothèques JavaScript\r\n                        * Il fournit un _grand_ nombre de bibliothèques\r\n\r\n                        ```\r\n                        <code data-trim contenteditable> > bower install angular</code>\r\n                        ```\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Karma\r\n                        ###### -\r\n                        ### Karma exécute des tests unitaires sur votre code JavaScript\r\n                        \r\n                        * Il est très rapide, et peut fonctionner continuellement en arrière-plan\r\n\r\n                        ```\r\n                        <code data-trim contenteditable>karma start src/test/javascript/karma.conf.js</code>\r\n                        ```\r\n                    </section>\r\n                    <section>\r\n                        <h2>AngularJS</h2>\r\n                        <h6/>\r\n                        <h3>Le framework JavaScript le plus populaire</h3>\r\n                        <ul>\r\n                            <li>Puissant &amp; facile à apprendre</li>\r\n                            <li>Data binding, validation formulaire, i18n...</li>\r\n                        </ul>\r\n                        <pre>\r\n                            <code data-trim contenteditable>\r\n<input type=\"text\" ng-model=\"yourName\" placeholder=\"Enter a name here\">\r\n<h1>Hello {{yourName}}!</h1>\r\n                            </code>\r\n                        </pre>\r\n                    </section>\r\n                    <section>\r\n                        <h2>Twitter Bootstrap</h2>\r\n                        <h6/>\r\n                        <h3>Un framework CSS/JavaScript génial pour les applications web responsives</h3>\r\n                        <ul>\r\n                            <li>Les éléments CSS et HTML pour tous les usages communs</li>\r\n                            <li>Des tonnes de composants JavaScript: menus, navbars, boîtes déroulantes, alertes ...</li>\r\n                        </ul>\r\n                        <pre>\r\n                            <code data-trim contenteditable>\r\n<div class=\"alert alert-success\">\r\n    <strong>Hello, world!</strong>\r\n</div>\r\n                            </code>\r\n                        </pre>\r\n                    </section>\r\n                </section>\r\n\r\n                <section>\r\n                    <section data-background=\"#e7e7e7\" data-background-transition=\"zoom\" data-markdown>\r\n                        #Back-End \r\n                        ###### -\r\n                        ### Maven, Spring, Spring MVC REST, Spring Data JPA, Netflix OSS\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Maven / Gradle\r\n                        ###### -\r\n                        ### Les plus populaires Java build tools\r\n                        \r\n                        * Bien connus, des répertoires et des objectifs prédéfinis\r\n                        * Intégration avec les EDIs principaux\r\n                        * Grand écosystème de plug-in, y compris Spring Boot et Yeoman\r\n\r\n                        ```\r\n./mvnw spring-boot:run\r\n                        ```\r\n                        ```\r\n./gradlew bootRun\r\n                        ```\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Spring Boot\r\n                        ###### -\r\n                        ### Standard de-facto pour les apps Java\r\n                        \r\n                        * IoC, AOP et abstractions pour faciliter le codage d'application\r\n                        * Rapide et léger, et extrêmement puissant en cas de _besoin_\r\n                        * Live-reload d'application\r\n\r\n                        \r\n                        ```java\r\n@Service\r\n@Transactional\r\npublic class UserService {\r\n\r\n    @Inject\r\n    private UserRepository userRepository;\r\n\r\n}\r\n                        ```\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Netflix OSS\r\n                        ###### -\r\n                        ### Fournit des outils et des frameworks pour microservices\r\n                        \r\n                        * Eureka - Service _registry_ pour l'équilibrage de charge et de basculement.\r\n                        * Zuul - Proxy pour le routage dynamique, la surveillance et la sécurité\r\n                        * Ribbon - software load balancing pour les services\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Liquibase\r\n                        ###### -\r\n                        ###Les mises à jour de base de données en toute simplicité\r\n\r\n                        * Mettre à jour un schéma de base de données\r\n                        * Fonctionne très bien avec Spring et JPA\r\n                        * A besoin d'une bonne compréhension des bases de données et d’ORM\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## JPA\r\n                        ###### -\r\n                        ### La solution ORM standard pour Java\r\n                        \r\n                        * Hibernate est utilisé en dessous\r\n                        * Très complet, ensemble impressionnant de fonctionnalités\r\n                        \r\n                        ```java\r\n@Entity\r\npublic class User implements Serializable {\r\n\r\n    @Id\r\n    private String login;\r\n\r\n}\r\n                        ```\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Spring Data JPA\r\n                        ###### -\r\n                        ### Complément suplimentaire de JPA\r\n                        \r\n                        * Génère automatiquement des _repositories_ JPA\r\n                        * Supprime beaucoup de code réutilisable\r\n                        \r\n                        ```java\r\npublic interface PersistenceAuditEventRepository extends JpaRepository\r\n    &lt;PersistentAuditEvent, String&gt; {\r\n\r\n    List&lt;PersistentAuditEvent&gt;\r\n        findByPrincipalAndAuditEventDateGreaterThan(\r\n                    String principal, LocalDateTime after);\r\n\r\n}\r\n                        ```\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## MongoDB\r\n                        ###### - \r\n                        ### NoSQL pour l'évolutivité\r\n                        \r\n                        * Alternative à la base de données SQL et le choix JPA\r\n                        * Code similaire: fonctionne comme Spring Data JPA\r\n                        * Plus évolutif, facile à utiliser\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Cassandra\r\n                        ###### -\r\n                        ### NoSQL pour l'évolutivité\r\n                        \r\n                        * 2ème alternative à la base de données SQL et le choix JPA\r\n                        * Haute disponibilité\r\n                        * Des performances extrêmes et une faible latence pour les applications critiques\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Caching\r\n                        ###### -\r\n                        ### Caching est le roi des performances\r\n                        \r\n                        * Ehcache est la solution la plus largement utilisée\r\n                        * HazelCast est une excellente alternative, avec le soutien de clustering!\r\n                        * Hibernate, 2ème niveau de cache ou l’abstraction Spring Caching\r\n\r\n                        ```java\r\n@Entity\r\n@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\r\npublic class User implements Serializable {\r\n\r\n}\r\n                        ```\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Spring Security\r\n                        ###### -\r\n                        ### Framework de securité _Blindé_\r\n                        \r\n                        * L’outil principal, largement utilisé dans toutes les industries\r\n                        * Il sécurise les URL et le code Java (Spring Beans)\r\n                        * Fonctionne bien avec toutes les architectures d'applications Web\r\n\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Spring MVC REST\r\n                        ###### -\r\n                        ### Le meilleur REST framework pour Java\r\n                        \r\n                        * Solution REST complète de haute performance\r\n                        * Grand support de Spring , grand support de test\r\n\r\n                        ```java\r\n@RestController\r\npublic class AccountResource {\r\n    @RequestMapping(value = \"/app/rest/account\",\r\n            method = RequestMethod.POST)\r\n    public void saveAccount(@RequestBody UserDTO userDTO) {\r\n        userService.updateUserInformation(userDTO);\r\n    }\r\n}\r\n                        ```\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Thymeleaf\r\n                        ###### -\r\n                        ### Moteur de template moderne\r\n                        \r\n                        * Utilisé quand le _Single Web Page_ ne suffit pas\r\n                        * Replace JSP et JSTL, qui sont dépassées\r\n                        * Grands modèles pour les concepteurs Web\r\n\r\n                        ``` html\r\n                            &lsaquo;h1 th:text=&quot;#{title}&quot;>Hello, world &lsaquo;/h1&rsaquo;\r\n                        ```\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Monitoring\r\n                        ###### -\r\n                        ### Prêt pour la production avec Metrics\r\n                        \r\n                        * Surveille la JVM, serveur d'application, beans Spring, cache, et encore plus!\r\n                        * JMX ou graphite rapports\r\n\r\n                        ```java\r\n@Timed\r\npublic void saveAccount(@RequestBody UserDTO userDTO) {\r\n    userService.updateUserInformation(userDTO);\r\n}\r\n                        ```\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Cloud deployment\r\n                        ###### -\r\n                        ### Au cloud et au-delà!\r\n                        \r\n                        * Déploiements devrait être facile sur site et dans le cloud\r\n                        * Les fournisseurs de cloud de premier plan comme Cloud Foundry, Heroku et Amazon Web Services offrent tout l'outillage et les options de déploiement spécifiques\r\n                    </section>\r\n                </section>\r\n                <section>\r\n                    <section  data-background=\"#e7e7e7\" data-background-transition=\"zoom\" >\r\n                        <h1 style=\"color: #BC011B\">STOP</h1>\r\n                            <h2> Talking </h2>\r\n                        <h1 style=\"color: #228B22\">START</h1>\r\n                            <h2 style=\"color: #228B22\"> Doing </h2>\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Prerequis\r\n                        ###### -\r\n                        * Installation des outils: Java, Maven / Gradle, Git, Node.js, Bower, Yeoman and Gulp / Grunt\r\n                        * Modification du classpath : JAVA_HOME, MVN_HOME ...etc\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Installation Jhipster\r\n                        ###### -\r\n                        ```\r\nnpm install -g generator-jhipster\r\n                        ```\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Generer application\r\n                        ###### -\r\n                        ```\r\nyo jhipster\r\n                        ```\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Front-end live reload\r\n                        ###### -\r\n                        * Reload en direct du front-end (HTML, CSS, JavaScript) grâce à Gulp. \r\n                        * Modifier un fichier et votre navigateur se rafraîchira automatiquement\r\n                        \r\n                        ```\r\ngulp serve\r\n                        ```\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Ajouter une entité\r\n                        ###### -\r\n                        ```\r\nyo jhipster:entity foo\r\n                        ```\r\n                    </section>\r\n\r\n                    <section data-markdown>\r\n                        ## Packaging pour production\r\n                        ###### -\r\n                        ```\r\nmvn -Pprod package\r\njava -jar target/*.war --spring.profiles.active=prod\r\n                        ```\r\n                    </section>\r\n\r\n                    <section data-markdown>\r\n                        ## Passer en mode production\r\n                        ###### -\r\n                        ```\r\nyo jhipster:heroku\r\n                        ```\r\n                    </section>\r\n                </section>\r\n                <section>\r\n                     <section  data-background=\"#e7e7e7\" data-background-transition=\"zoom\" data-markdown>\r\n                        # Démonstration\r\n                    </section>\r\n                    <section data-markdown>\r\n                        ## Objectifs \r\n                        ###### -\r\n                        \r\n                        * Générer rapidement une application en mesure\r\n                        * Générer rapidement des entités _CRUD_ pour cette application\r\n                        * Avoir l'outillage pré-configuré et les bons freamworks pour modifier ces entités en fonction des bensoins métier\r\n                        * Pouvoir deployer l'ensemble en production en une commande\r\n                    </section> \r\n                    <section data-markdown>\r\n                        ## Simple cas d'utilisation \r\n                        ###### -\r\n                        \r\n                        * Un _Client_ peut avoir plusieurs _Compte_ bancaire\r\n                        * Il effectue plusieurs _Operation_ sur un _Compte_ bancaire\r\n                        * Une _Operation_ peut avoir plusieurs _Libelle_\r\n                    </section>  \r\n                    <section data-markdown>\r\n\t\t\t\t\t\t## Simple cas d'utilisation \r\n\t\t\t\t\t\t###### - \r\n\t\t\t\t\t\t![](images/banque.png)\r\n                    </section>\r\n                    <section data-markdown>\r\n                            ## Cas d'utilisation avancé \r\n                            ###### -\r\n                            ![](images/hrtables.gif)\r\n                        \r\n                    </section>\r\n                    <section data-markdown>\r\n                            ## Cas d'utilisation avancé \r\n                            ######-\r\n                            ### JHipster Domain Language (JDL) / JHipster-UML \r\n                            ###### -\r\n                        \r\n                            ```\r\n                            yo jhipster:import-jdl yourfile.jh\r\n                            ```\r\n                    </section>\r\n                </section>\r\n\r\n                <section  data-background=\"#e7e7e7\">\r\n                    <h1 style=\"color: #BC011B\">Merci!</h1>\r\n                </section>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <script src=\"lib/js/head.min.js\"></script>\r\n        <script src=\"js/reveal.min.js\"></script>\r\n        <script>\r\n\r\n            // Full list of configuration options available here:\r\n            // https://github.com/hakimel/reveal.js#configuration\r\n            // Start auto-sliding every 5s\r\n\r\n            Reveal.initialize({\r\n                controls: true,\r\n                progress: true,\r\n                history: true,\r\n                center: true,\r\n                slideNumber: false,\r\n                transition: 'slide', \r\n\r\n                //theme: Reveal.getQueryHash().theme, // available themes are in /css/theme\r\n               //  transition: Reveal.getQueryHash().transition || 'concave', // default/cube/page/concave/zoom/linear/fade/none\r\n\r\n                // Parallax scrolling\r\n                // parallaxBackgroundImage: 'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg',\r\n                // parallaxBackgroundSize: '2100px 900px',\r\n\r\n                // Optional libraries used to extend on reveal.js\r\n                dependencies: [\r\n                    { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },\r\n                    { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },\r\n                    { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },\r\n                    { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },\r\n                    { src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },\r\n                    { src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }\r\n                ]\r\n            });\r\n            \r\n            // Start auto-sliding every 5s\r\n\r\n        </script>\r\n            <script>\r\n                  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\r\n                  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\n                  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n                  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\r\n\r\n                  ga('create', 'UA-46075199-1', 'jhipster.github.io');\r\n                  ga('send', 'pageview');\r\n        </script>\r\n    </body>\r\n</html>",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}